apply plugin: 'signing'
apply from: 'pom.gradle'

dependencies {
    compile project(':sdk-swagger')
    compile 'org.apache.httpcomponents:httpcore:4.4.1'
    compile 'org.apache.httpcomponents:httpmime:4.4.1'
    compile 'org.apache.httpcomponents:httpclient:4.4.1'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.9.6'

    testCompile project(':test')
}


jar {
    manifest {
        attributes("Built-By": "http://www.opsgenie.com",
                "Specification-Title": "OpsGenie Java SDK",
                "Specification-Product": "opsgenie-java-sdk",
                "Specification-Version": project.version,
                "Specification-Vendor": "http://www.opsgenie.com",
                "Implementation-Title": "OpsGenie Java SDK",
                "Implementation-Product": "opsgenie-java-sdk",
                "Implementation-Vendor": "http://www.opsgenie.com",
                "Implementation-Version": project.version,
        )
    }
}

task sourcesJar(type: Jar) {
    classifier 'sources'
    from sourceSets.main.allSource
}

task generateAllDocs(type: Javadoc) {
    source = sourceSets.main.allJava + project(":sdk-swagger").sourceSets.main.allJava
    destinationDir = file("${buildDir}/docs/all")
}

task javadocJar(type: Jar, dependsOn: 'javadoc') {
    classifier 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

signing {
    required { gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: project.hasProperty('ossrhUsername') ? ossrhUsername : '', password: project.hasProperty('ossrhPassword') ? ossrhPassword : '')
            }

            populatePom(pom)
        }
    }
}

